syntax = "proto3";

package otsimo;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;
option go_package = "notificationpb";

message Email {
    repeated string to_email = 1;
    repeated string to_name = 2;
    string from_email = 3;
    string from_name = 4;
    string subject = 5;
    repeated string cc = 6;
    repeated string bcc = 7;
    //ReplyTo
    string reply_to = 8;
    //TemplateHtml overrides default template html file
    bytes template_html = 9;
    //TemplateSub overrides default template subject file
    bytes template_sub = 10;
    //TemplateTxt overrides default template text file
    bytes template_txt = 11;
}

message Sms {
    repeated string to = 1;
    //Template overrides default template file
    bytes template = 2;
}

message Push {
    repeated string to = 1;
    //Template overrides default template file
    bytes template = 2;
}

message Target {
    oneof backend {
        Email email = 1;
        Sms sms = 2;
        Push push = 3;
    }
}

message Message {
    string event = 1;
    string language = 2;
    int64 schedule_at = 3;
    repeated Target targets = 4;
    map<string, string> tags = 5;
    bytes data_json = 6;
}

message MessageTargetResponse {
    string target = 1;
    string output = 2;
}

message SendMessageResponse {
    string output = 1;
    repeated MessageTargetResponse results = 2;
}

message Event {
    message Template {
        repeated string languages = 1;
        string suffix = 2;
    }
    string name = 1;
    repeated Template templates = 2;
}

message ScanRequest {
}

message ScanResponse {
    repeated Event events = 1;
}

service NotificationService {
    rpc SendMessage (Message) returns (SendMessageResponse);
    rpc Scan (ScanRequest) returns (ScanResponse);
}